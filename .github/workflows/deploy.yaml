name: Deploy to VPS
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            # Update source code in /apps/enfyra-cms
            cd /apps/enfyra-cms
            git reset --hard HEAD
            git clean -fd
            git pull origin main
            export IMAGE_TAG=$(git rev-parse --short HEAD)
            docker build -t enfyra-cms:$IMAGE_TAG .
            
            # Import image to MicroK8s
            if [ "$K8S_MODE" = "microk8s" ]; then
              docker save enfyra-cms:$IMAGE_TAG | microk8s ctr image import -
            fi

            # Setup Kubernetes config based on provider type
            # Read from config file to determine k8s mode
            cd /deployments/enfyra-cms
            K8S_MODE=$(yq '.kubernetes.provider' ~/configs/enfyra-cms.yaml 2>/dev/null || echo "microk8s")

            if [ "$K8S_MODE" = "microk8s" ]; then
              echo "Using MicroK8s configuration"
              export KUBECONFIG=/var/snap/microk8s/current/credentials/client.config
            else
              echo "Using kubeadm configuration"
              export KUBECONFIG=/etc/kubernetes/admin.conf
            fi

            # Setup Pulumi environment
            export PATH=$PATH:$HOME/.pulumi/bin
            export PULUMI_CONFIG_PASSPHRASE=''

            # Run Pulumi deployment with new image tag
            pulumi version
            pulumi login file://$(pwd)/.pulumi
            pulumi stack select enfyra-cms
            
            # Clear any existing locks
            pulumi cancel || true
            
            pulumi config set image enfyra-cms:$IMAGE_TAG
            pulumi up --yes
